
const BALL_X 0x8000
const BALL_Y 0x8002
const BALL_Y_DIR 0x8004
const BALL_X_DIR 0x8005

LOAD $7 BALL_X_DIR
LOAD $0a #1
STORE $0a

LOAD $7 BALL_Y_DIR
STORE $0a

main:

CALL clear_screen
CALL bounce_x
CALL move_ball_x
CALL move_ball_y
CALL draw_ball

JDRAW main


bounce_y:
LOAD $2 #80
LOAD $1 #0
LOAD $7 BALL_Y
READ $0

EQ $0 $1:
CJMP neg_bounds

EQ $0 $2:
CJMP pos_bounds


RET


pos_bounds_y:

LOAD $7 BALL_Y_DIR

RET

neg_bounds_y:

RET

bounce_x:

LOAD $1 #120
LOAD $2 #0
LOAD $7 BALL_X
READ $0

EQ $0 $1
CJMP pos_bounds_x

NEQ $0 $2
CJMP neg_bounds_x

RET

pos_bounds_x:

LOAD $7 BALL_X_DIR
LOAD $0a #0
STORE $0a

RET

neg_bounds_x:

LOAD $7 BALL_X_DIR
LOAD $0a #1
STORE $0a

RET



move_ball_y:

LOAD $0a #1

LOAD $7 BALL_Y_DIR
READ $0b

EQ $0a $0b
CJMP y_pos
NJMP y_neg


y_pos:

LOAD $7 BALL_Y
READ $0
LOAD $1 #1
ADD $0 $1 $0
STORE $0

RET

y_neg:

LOAD $7 BALL_Y
READ $0
LOAD $1 #1
SUB $0 $1 $0
STORE $0

RET






move_ball_x:

LOAD $0a #1

LOAD $7 BALL_X_DIR
READ $0b

EQ $0a $0b
CJMP x_pos
NJMP x_neg


x_pos:

LOAD $7 BALL_X
READ $0
LOAD $1 #1
ADD $0 $1 $0
STORE $0

RET

x_neg:

LOAD $7 BALL_X
READ $0
LOAD $1 #1
SUB $0 $1 $0
STORE $0

RET




draw_ball:
LOAD $7 BALL_X
READ $0

LOAD $1 #240
MUL $0 $1 $0

LOAD $7 BALL_Y
READ $1
LOAD $2 #3
MUL $1 $2 $1

LOAD $7 #34815
ADD $7 $0 $7
ADD $7 $1 $7

LOAD $0a #255
STORE $0a

RET


clear_screen:

LOAD $7 #34815
LOAD $6 #34815
LOAD $5 #1
LOAD $0a #0

clear_loop:

STORE $0a
ADD $5 $7 $7

LES $6 $7
CJMP clear_loop

RET
