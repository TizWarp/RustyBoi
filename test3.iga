const PLAYER_X 0x8000
const PLAYER_Y 0x8002


main:

CALL clear_screen
CALL draw_player
CALL input

JDRAW main

draw_player:

LOAD $7 PLAYER_Y
READ $0
LOAD $1 #3
MUL $0 $1 $0

LOAD $7 PLAYER_X
READ $1
LOAD $2 #240
MUL $1 $2 $1

LOAD $6 #34815
ADD $1 $6 $6
ADD $0 $6 $6

LOAD $1a #255
LOAD $0 #3
LOAD $1 #240

MOV $6 $7
STORE $1a

ADD $6 $0 $7
STORE $1a

SUB $6 $0 $7
STORE $1a

ADD $6 $1 $7
STORE $1a

SUB $6 $1 $7
STORE $1a

ADD $6 $1 $7
ADD $7 $0 $7
STORE $1a

SUB $6 $1 $7
SUB $7 $0 $7
STORE $1a

SUB $6 $1 $7
ADD $7 $0 $7
STORE $1a

ADD $6 $1 $7
SUB $7 $0 $7
STORE $1a

RET

clear_screen:

LOAD $7 #34815
LOAD $6 #34815
LOAD $5 #1
LOAD $1a #0

loop:

STORE $1a
ADD $7 $5 $7
LES $6 $7
CJMP loop

RET


input:

LOAD $1 #1
LOAD $2 #120
LOAD $3 #80

LOAD $7 0x87FD
READ $0a
EQ $0a $1a
CCALL down_key

LOAD $7 0x87FB
READ $0a
EQ $0a $1a
CCALL right_key

LOAD $7 0x87FE
READ $0a
EQ $0a $1a
CCALL up_key

LOAD $7 0x87FC
READ $0a
EQ $0a $1a
CCALL left_key

RET

down_key:
LOAD $7 PLAYER_Y
READ $0
ADD $0 $1 $0
MOD $0 $3 $0
STORE $0
RET

right_key:
LOAD $7 PLAYER_X
READ $0
ADD $0 $1 $0
MOD $0 $2 $0
STORE $0
RET

left_key:
LOAD $7 PLAYER_X
READ $0
SUB $0 $1 $0

LOAD $1 #121
LES $1 $0
CJMP low_limit_x
STORE $0
RET

low_limit_x:
LOAD $0 #120
STORE $0
RET


up_key:
LOAD $7 PLAYER_Y
READ $0
SUB $0 $1 $0

LOAD $1 #81
LES $1 $0
CJMP low_limit_y
STORE $0
RET

low_limit_y:
LOAD $0 #80
STORE $0
RET
